function task_settings = obtain_task_settings (exptStr, E1, E2, T1, miceName, baseValSeed)
%{ function to initialize the variables that the BMI needs %}
    
    task_settings.exptStr = exptStr;
    task_settings.E2 = E2;
    task_settings.E1 = E1;
    task_settings.T1 = T1;
    task_settings.units = length(E1)+length(E2); 
    task_settings.back2Base = 1/2*T1;
    
    task_settings.miceSettings = define_mice_settings(miceName)
    
    task_settings.expectedLengthExperiment = evalin('base','hSI.hFastZ.numVolumes'); % frames that will last the online experiment (less than actual exp)
    task_settings.frameRate = evalin('base','hSI.hRoiManager.scanFrameRate/hSI.hFastZ.numFramesPerVolume');
    task_settings.params = create_params();
    
    task_settings.baseFrames = round(task_settings.params.baseLength * task_settings.frameRate);
    task_settings.motionRelaxationFrames = 0;  %number of frames that we will wait to compute BMI after motion
    task_settings.movingAverageFrames = round(task_settings.params.movingAverage * task_settings.frameRate); 
    task_settings.relaxationFrames = round(task_settings.params.relaxationTime * task_settings.frameRate);
    task_settings.timeoutFrames = round(task_settings.params.timeout * task_settings.frameRate);
    
    if nargin < 6
        task_settings.baseValSeed = NaN(task_settings.baseFrames);
    else
        task_settings.baseValSeed = baseValSeed;
    end